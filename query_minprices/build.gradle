plugins {
	id 'org.springframework.boot' version '2.3.11.RELEASE'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

group = 'tbs.client'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "Hoxton.SR11")
}

dependencies {
	// https://mvnrepository.com/artifact/io.springfox/springfox-swagger2
	implementation group: 'io.springfox', name: 'springfox-swagger2', version: '2.9.2'
	// https://mvnrepository.com/artifact/io.springfox/springfox-swagger-ui
	implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.9.2'


	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

	implementation 'org.springframework.cloud:spring-cloud-starter-loadbalancer'

	implementation 'org.springframework.boot:spring-boot-starter-web'


	// Project Lombok --
	implementation 'org.projectlombok:lombok:1.18.18'
	implementation group: 'javax.validation', name: 'validation-api', version: '2.0.0.Final'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation group: 'jakarta.persistence', name: 'jakarta.persistence-api', version: '2.2.3'\

	// https://mvnrepository.com/artifact/org.springframework.data/spring-data-elasticsearch
	implementation group: 'org.springframework.data', name: 'spring-data-elasticsearch', version: '4.1.5'

	implementation group: 'org.apache.kafka', name: 'kafka-clients', version: '2.8.0'
	implementation group: 'org.apache.kafka', name: 'kafka-clients', version: '2.5.1'
	implementation group: 'org.elasticsearch.client', name: 'elasticsearch-rest-high-level-client', version: '7.6.2'
	implementation 'org.springframework.boot:spring-boot-starter-web'



	implementation 'org.apache.kafka:kafka-streams'
	implementation 'org.springframework.kafka:spring-kafka'

	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'io.projectreactor:reactor-test'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

test {
	useJUnitPlatform()
}
